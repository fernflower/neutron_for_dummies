- apt: update-cache=yes
  sudo: yes

- name: install system dependencies
  apt: name={{item}} state=latest
  with_items:
      - git
      - git-review
      - ack-grep
      - build-essential
      - python2.7
      - language-pack-ru
      - vim
  sudo: yes

- name: clone repo with nice vim config
  git: repo=https://github.com/fernflower/vim-quickstart.git dest="/home/{{user}}/.vim" update=no

- name: update submodules in vim bundles
  command: chdir="/home/{{user}}/.vim" git submodule update --init

- name: make symlinc for vimrc
  file: src="/home/{{user}}/.vim/vimrc" dest="/home/{{user}}/.vimrc" owner={{user}} state=link

- name: run BundleInstall
  command: vim +BundleInstall +qall

- name: checkout devstack repo
  git: repo=https://git.openstack.org/openstack-dev/devstack dest="{{project_dir}}/devstack" update=no

- name: checkout rally repo
  git: repo=https://github.com/openstack/rally dest="{{project_dir}}/rally" update=no

- name: checkout neutron_for_dummies (just in case)
  git: repo=https://github.com/fernflower/neutron_for_dummies.git dest="{{project_dir}}/neutron_for_dummies" update=no

- name: checkout neutron repo
  git: repo=https://github.com/openstack/neutron.git update=no dest={{project_dir}}/neutron

- name: copy py2 localrc to devstack dir
  template: src=neutron_rally_localrc.j2 dest="{{project_dir}}/devstack/localrc"

- name: verify ADMIN_PASSWORD is set in localrc
  shell: grep "ADMIN_PASSWORD=" "{{project_dir}}/devstack/localrc"
  register: check_password_set
  always_run: True
  changed_when: False

- name: echo devstack admin password
  shell: echo {{check_password_set.stdout}} | cut -d= -f2
  register: devstack_admin_pass

- name: check for devstack screen session
  shell: screen -ls stack | awk '$0~/No Sockets found/{print "no session"}'
  register: screen_session_exists

- name: run stack.sh
  shell: bash "{{project_dir}}/devstack/stack.sh"
  when: screen_session_exists.stdout == "no session"

- name: configure for functional testing
  shell: bash "{{project_dir}}/neutron/tools/configure_for_func_testing.sh" "{{project_dir}}/devstack" -i
  environment:
      DATABASE_PASSWORD: "{{devstack_admin_pass.stdout}}"
      MYSQL_PASSWORD: "{{devstack_admin_pass.stdout}}"

- name: change rabbitmq user password for devstack's one
  shell: rabbitmqctl change_password stackrabbit "{{devstack_admin_pass.stdout}}"
  sudo: yes
